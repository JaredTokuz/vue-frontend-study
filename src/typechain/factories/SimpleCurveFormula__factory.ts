/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleCurveFormula,
  SimpleCurveFormulaInterface,
} from "../SimpleCurveFormula";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateBuyCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "calculateBuyReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "calculateSaleCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateSaleReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061066b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063071f852114610051578063271a7be414610081578063548ead49146100b1578063a9e03289146100e1575b600080fd5b61006b6004803603810190610066919061036f565b610112565b60405161007891906103fd565b60405180910390f35b61009b6004803603810190610096919061036f565b610185565b6040516100a891906103fd565b60405180910390f35b6100cb60048036038101906100c6919061036f565b6101f8565b6040516100d891906103fd565b60405180910390f35b6100fb60048036038101906100f6919061036f565b610297565b604051610109929190610418565b60405180910390f35b6000808260028561012391906104d9565b61012d9190610533565b9050600281101561014257600191505061017f565b6002600a8261015191906104d9565b61015b91906104a8565b90506000600a848361016d91906104d9565b61017791906104a8565b905080925050505b92915050565b60008060028461019591906104d9565b836101a09190610452565b905060028110156101b55760019150506101f2565b6002600a826101c491906104d9565b6101ce91906104a8565b90506000600a84836101e091906104d9565b6101ea91906104a8565b905080925050505b92915050565b600080838461020791906104d9565b9050600060028461021891906104d9565b905080821161025c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610253906103dd565b60405180910390fd5b6000818361026a9190610533565b90506000610277826102fd565b9050600081886102879190610533565b9050809550505050505092915050565b60008060006002846102a991906104d9565b85866102b591906104d9565b6102bf9190610452565b905060006102cc826102fd565b9050600086826102dc9190610533565b905060006102ea8883610185565b9050818195509550505050509250929050565b600080600260018461030f9190610452565b61031991906104a8565b90508291505b8181101561035457809150600281828561033991906104a8565b6103439190610452565b61034d91906104a8565b905061031f565b50919050565b6000813590506103698161061e565b92915050565b6000806040838503121561038257600080fd5b60006103908582860161035a565b92505060206103a18582860161035a565b9150509250929050565b60006103b8602183610441565b91506103c3826105cf565b604082019050919050565b6103d781610567565b82525050565b600060208201905081810360008301526103f6816103ab565b9050919050565b600060208201905061041260008301846103ce565b92915050565b600060408201905061042d60008301856103ce565b61043a60208301846103ce565b9392505050565b600082825260208201905092915050565b600061045d82610567565b915061046883610567565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561049d5761049c610571565b5b828201905092915050565b60006104b382610567565b91506104be83610567565b9250826104ce576104cd6105a0565b5b828204905092915050565b60006104e482610567565b91506104ef83610567565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561052857610527610571565b5b828202905092915050565b600061053e82610567565b915061054983610567565b92508282101561055c5761055b610571565b5b828203905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e6f7420656e6f75676820737570706c7920666f72207468697320616d6f756e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b61062781610567565b811461063257600080fd5b5056fea26469706673582212203885fb1607ca37a8a5a9b337d6f7b80c398df70183bfa12da1f401321223fc6864736f6c63430008040033";

export class SimpleCurveFormula__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleCurveFormula> {
    return super.deploy(overrides || {}) as Promise<SimpleCurveFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleCurveFormula {
    return super.attach(address) as SimpleCurveFormula;
  }
  connect(signer: Signer): SimpleCurveFormula__factory {
    return super.connect(signer) as SimpleCurveFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleCurveFormulaInterface {
    return new utils.Interface(_abi) as SimpleCurveFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleCurveFormula {
    return new Contract(address, _abi, signerOrProvider) as SimpleCurveFormula;
  }
}
